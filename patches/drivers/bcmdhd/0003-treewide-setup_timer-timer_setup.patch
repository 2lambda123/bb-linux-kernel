From 807a67fb08d48a460a3f54d940d9c666f018e0d3 Mon Sep 17 00:00:00 2001
From: Robert Nelson <robertcnelson@gmail.com>
Date: Thu, 8 Nov 2018 12:43:26 -0600
Subject: [PATCH 3/3] treewide: setup_timer() -> timer_setup()

Signed-off-by: Robert Nelson <robertcnelson@gmail.com>
---
 drivers/net/wireless/bcmdhd/dhd_linux.c     | 12 ++++++------
 drivers/net/wireless/bcmdhd/wl_cfg80211.c   | 12 ++++++------
 drivers/net/wireless/bcmdhd/wl_cfg_btcoex.c |  7 +++----
 drivers/net/wireless/bcmdhd/wl_iw.c         |  8 ++++----
 4 files changed, 19 insertions(+), 20 deletions(-)

diff --git a/drivers/net/wireless/bcmdhd/dhd_linux.c b/drivers/net/wireless/bcmdhd/dhd_linux.c
index 33fba251d7cb..5729b64a7318 100644
--- a/drivers/net/wireless/bcmdhd/dhd_linux.c
+++ b/drivers/net/wireless/bcmdhd/dhd_linux.c
@@ -4787,9 +4787,9 @@ dhd_watchdog_thread(void *data)
 	complete_and_exit(&tsk->completed, 0);
 }
 
-static void dhd_watchdog(ulong data)
+static void dhd_watchdog(struct timer_list *t)
 {
-	dhd_info_t *dhd = (dhd_info_t *)data;
+	dhd_info_t *dhd = from_timer(dhd, t, timer);
 	unsigned long flags;
 
 	if (dhd->pub.dongle_reset) {
@@ -4868,9 +4868,9 @@ dhd_rpm_state_thread(void *data)
 	complete_and_exit(&tsk->completed, 0);
 }
 
-static void dhd_runtimepm(ulong data)
+static void dhd_runtimepm(struct timer_list *t)
 {
-	dhd_info_t *dhd = (dhd_info_t *)data;
+	dhd_info_t *dhd = from_timer(dhd, t, rpm_timer);
 
 	if (dhd->pub.dongle_reset) {
 		return;
@@ -7328,7 +7328,7 @@ dhd_attach(osl_t *osh, struct dhd_bus *bus, uint bus_hdrlen)
 
 
 	/* Set up the watchdog timer */
-	setup_timer(&dhd->timer, dhd_watchdog, (ulong)dhd);
+	timer_setup(&dhd->timer, dhd_watchdog, 0);
 	dhd->default_wd_interval = dhd_watchdog_ms;
 
 	if (dhd_watchdog_prio >= 0) {
@@ -7344,7 +7344,7 @@ dhd_attach(osl_t *osh, struct dhd_bus *bus, uint bus_hdrlen)
 
 #ifdef DHD_PCIE_RUNTIMEPM
 	/* Setup up the runtime PM Idlecount timer */
-	setup_timer(&dhd->rpm_timer, dhd_runtimepm, (ulong)dhd);
+	timer_setup(&dhd->rpm_timer, dhd_runtimepm, 0);
 	dhd->rpm_timer_valid = FALSE;
 
 	dhd->thr_rpm_ctl.thr_pid = DHD_PID_KT_INVALID;
diff --git a/drivers/net/wireless/bcmdhd/wl_cfg80211.c b/drivers/net/wireless/bcmdhd/wl_cfg80211.c
index ce32e4a1de6c..c8eace67b0d8 100644
--- a/drivers/net/wireless/bcmdhd/wl_cfg80211.c
+++ b/drivers/net/wireless/bcmdhd/wl_cfg80211.c
@@ -12465,10 +12465,10 @@ void wl_terminate_event_handler(void)
 	}
 }
 
-static void wl_scan_timeout(unsigned long data)
+static void wl_scan_timeout(struct timer_list *t)
 {
 	wl_event_msg_t msg;
-	struct bcm_cfg80211 *cfg = (struct bcm_cfg80211 *)data;
+	struct bcm_cfg80211 *cfg = from_timer(cfg, t, scan_timeout);
 	struct wireless_dev *wdev = NULL;
 	struct net_device *ndev = NULL;
 	struct wl_scan_results *bss_list;
@@ -12549,9 +12549,9 @@ static void wl_del_roam_timeout(struct bcm_cfg80211 *cfg)
 
 }
 
-static void wl_roam_timeout(unsigned long data)
+static void wl_roam_timeout(struct timer_list *t)
 {
-	struct bcm_cfg80211 *cfg = (struct bcm_cfg80211 *)data;
+	struct bcm_cfg80211 *cfg = from_timer(cfg, t, roam_timeout);
 	dhd_pub_t *dhdp = (dhd_pub_t *)(cfg->pub);
 
 	WL_ERR(("roam timer expired\n"));
@@ -13437,7 +13437,7 @@ static s32 wl_init_scan(struct bcm_cfg80211 *cfg)
 	wl_escan_init_sync_id(cfg);
 
 	/* Init scan_timeout timer */
-	setup_timer(&cfg->scan_timeout, wl_scan_timeout, (unsigned long)cfg);
+	timer_setup(&cfg->scan_timeout, wl_scan_timeout, 0);
 
 	return err;
 }
@@ -13448,7 +13448,7 @@ static s32 wl_init_roam_timeout(struct bcm_cfg80211 *cfg)
 	int err = 0;
 
 	/* Init roam timer */
-	setup_timer(&cfg->roam_timeout, wl_roam_timeout, (unsigned long)cfg);
+	timer_setup(&cfg->roam_timeout, wl_roam_timeout, 0);
 
 	return err;
 }
diff --git a/drivers/net/wireless/bcmdhd/wl_cfg_btcoex.c b/drivers/net/wireless/bcmdhd/wl_cfg_btcoex.c
index 0e9e5df9ede0..0b34a71f9644 100644
--- a/drivers/net/wireless/bcmdhd/wl_cfg_btcoex.c
+++ b/drivers/net/wireless/bcmdhd/wl_cfg_btcoex.c
@@ -298,9 +298,9 @@ wl_cfg80211_bt_setflag(struct net_device *dev, bool set)
 #endif
 }
 
-static void wl_cfg80211_bt_timerfunc(ulong data)
+static void wl_cfg80211_bt_timerfunc(struct timer_list *t)
 {
-	struct btcoex_info *bt_local = (struct btcoex_info *)data;
+	struct btcoex_info *bt_local = from_timer(bt_local, t, timer);
 	WL_TRACE(("Enter\n"));
 	bt_local->timer_on = 0;
 	schedule_work(&bt_local->work);
@@ -390,8 +390,7 @@ void* wl_cfg80211_btcoex_init(struct net_device *ndev)
 	btco_inf->ts_dhcp_ok = 0;
 	/* Set up timer for BT  */
 	btco_inf->timer_ms = 10;
-	setup_timer(&btco_inf->timer, wl_cfg80211_bt_timerfunc,
-		    (ulong)btco_inf);
+	timer_setup(&btco_inf->timer, wl_cfg80211_bt_timerfunc, 0);
 
 	btco_inf->dev = ndev;
 
diff --git a/drivers/net/wireless/bcmdhd/wl_iw.c b/drivers/net/wireless/bcmdhd/wl_iw.c
index afc877e780fa..678d390f6146 100644
--- a/drivers/net/wireless/bcmdhd/wl_iw.c
+++ b/drivers/net/wireless/bcmdhd/wl_iw.c
@@ -183,7 +183,7 @@ typedef struct iscan_info {
 	char ioctlbuf[WLC_IOCTL_SMLEN];
 } iscan_info_t;
 iscan_info_t *g_iscan = NULL;
-static void wl_iw_timerfunc(ulong data);
+static void wl_iw_timerfunc(struct timer_list *t);
 static void wl_iw_set_event_mask(struct net_device *dev);
 static int wl_iw_iscan(iscan_info_t *iscan, wlc_ssid_t *ssid, uint16 action);
 #endif /* WL_ESCAN */
@@ -3638,9 +3638,9 @@ int wl_iw_get_wireless_stats(struct net_device *dev, struct iw_statistics *wstat
 
 #ifndef WL_ESCAN
 static void
-wl_iw_timerfunc(ulong data)
+wl_iw_timerfunc(struct timer_list *t)
 {
-	iscan_info_t *iscan = (iscan_info_t *)data;
+	iscan_info_t *iscan = from_timer(iscan, t, timer);
 	iscan->timer_on = 0;
 	if (iscan->iscan_state != ISCAN_STATE_IDLE) {
 		WL_TRACE(("timer trigger\n"));
@@ -3878,7 +3878,7 @@ wl_iw_attach(struct net_device *dev, void * dhdp)
 
 	/* Set up the timer */
 	iscan->timer_ms    = 2000;
-	setup_timer(&iscan->timer, wl_iw_timerfunc, (ulong)iscan);
+	timer_setup(&iscan->timer, wl_iw_timerfunc, 0);
 
 	sema_init(&iscan->sysioc_sem, 0);
 	init_completion(&iscan->sysioc_exited);
-- 
2.19.1

